{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "env": { "browser": true, "es6": true, "node": true },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "jsx-a11y", "import", "prettier"],
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "no-console": "warn", // console 사용
    "eqeqeq": "error", // 일치비교연산자 사용
    "no-unused-vars": "error", // 사용하지 않은 변수
    "no-plusplus": "error", // ++ -- 연산자 사용 x
    "curly": ["error", "all"],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "no-new-object": "error", // Object 생성자 함수가 아닌 객체 리터럴 사용
    "object-shorthand": "error", // es6 메서드 단축 구문 사용
    "no-nested-ternary": "warn", // 삼항 연산자 중첩 x
    "no-unneeded-ternary": "error", // 불필요한 삼항 연산자 사용 x
    "no-else-return": "error", // if 블록이 항상 return 구문을 실행한다면 else문이 불필요하다.
    "spaced-comment": "warn", // 주석은 공백으로 시작
    "camelcase": "error", // 객체, 함수, 인스턴스 카멜케이스 사용
    "import/no-unresolved": "error",
    "no-unsafe-optional-chaining": "warn",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"], // interface 사용
    "@typescript-eslint/no-explicit-any": "warn", // type any 사용 경고
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          ["internal"],
          ["parent", "sibling", "index"],
          ["object", "type"],
          ["unknown"]
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "{react/**,react-dom/**}",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "{app/**, constants/**,apis/**,types/**,utils/**,hooks/**}",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "{components/**}",
            "group": "internal",
            "position": "after"
          },
          {
            "pattern": "{icons/**,images/**}",
            "group": "internal",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": [],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".{ts,tsx}"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "tsx": true
    }
  }
}

